// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js schema with UUID support
model Account {
  id                String  @id @default(uuid()) @db.Uuid
  userId            String  @db.Uuid
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(uuid()) @db.Uuid
  sessionToken String   @unique
  userId       String   @db.Uuid
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String          @id @default(uuid()) @db.Uuid
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  authenticators Authenticator[]
  contextualMetadata UserContextualMetadata?

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_token")
}

model Authenticator {
  credentialID         String  @id
  userId               String  @db.Uuid
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, credentialID])
  @@map("authenticators")
}

model UserContextualMetadata {
  id                        String   @id @default(uuid()) @db.Uuid
  userId                    String   @unique @db.Uuid
  prominentTopics          Json     @default("[]")
  representativeConversations Json @default("[]")
  narrativeOverviews       Json     @default("[]")
  keyQuestions             Json     @default("[]")
  emergingTrends           Json     @default("[]")
  userSentiments           Json     @default("[]")
  peopleMentions           Json     @default("[]")
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
  lastInteractionAt        DateTime @default(now())
  interactionCount         Int      @default(0)
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([lastInteractionAt])
  @@index([updatedAt])
  @@map("user_contextual_metadata")
}
